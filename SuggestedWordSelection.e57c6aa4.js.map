{"mappings":"saACA,IAAIA,8CAEFA,EAASC,EAAA,SACLD,EAAOE,aAAYF,EAASA,EAAOG,SACvCH,EAAOI,OAASH,EAAA,SAAAG,OAEhBH,EAAA,SAAAE,QAAuDH,GACvDA,EAAOK,UAAY,gBACnBL,EAAOM,OAAS,iCAIlBC,EAAeP,qKA6CfQ,EAAeC,EAAAC,gBAAgB,CAC7BC,KAAM,yBACNC,WAAY,QAAEC,EAAAV,SACdW,QACE,MAAMC,EAAQC,EAAAC,WAEd,MAAO,CAAEC,UAAWH,EAAMI,MAAMD,gBAAyBH,IAE3DK,SAAU,CACRC,WACE,IAAKC,KAAKC,WAAWC,OAAQ,OAAO,EAEpC,OADWF,KACDC,WACPE,KACEC,GAEIJ,KAAaP,MAAMI,MAAMD,UAAUS,MACjCC,GAAgBA,EAAEC,KAAOH,IAE5BI,MAAMN,SAEXO,QAAM,CAAEC,EAAGC,IAAMD,EAAIC,MAG5BC,KAAI,KACK,CACLX,WAAY,GACZY,MAAO,EACPC,MAAO,OAGXC,UACE,MAAMD,EAASd,KAAKc,MAAQE,EAAAnC,UAAUoC,WACtC,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACjBC,aAAa,gCAAkCD,IACjDJ,EAAMM,SAASF,GAGnBJ,EAAMO,aAAaC,IACjBH,aAAa,gCAAkCG,IAAU,MAG7DC,gBACEvB,KAAKc,OAAOU,eAEdC,QAAS,CACPC,UAAUC,GACJ3B,KAAKC,WAAW2B,SAASD,EAAKpB,IAChCP,KAAKC,WAAaD,KAAKC,WAAW4B,QAAQzB,GAAMA,IAAMuB,EAAKpB,KAG7DP,KAAKC,WAAW6B,KAAKH,EAAKpB,KAE5BwB,QACE,IAAK/B,KAAKa,MACR,OAAOmB,EAAAC,YAAY,uBAAsB,CACvCC,KAAM,WAEV,MAAM1B,EAAQR,KAAKC,WAChBE,KAAKgC,IACJ,MAAMC,EAAWpC,KAAKP,MAAMI,MAAMD,UAAUS,MACzCC,GAAgBA,EAAEC,KAAO4B,IAE5B,OAAOC,EAAS5B,MAAML,KAAKC,IACzBA,EAAEgC,SAAWA,EAASC,MACfjC,QAGVK,QAAM,CAAEC,EAAGC,IAAM,IAAID,KAAMC,KAC9BX,KAAKP,MAAM6C,OAAO,UAAWC,EAAAC,GAAEC,WAAWjC,EAAOR,KAAKa,QACtDb,KAAK0C,QAAQZ,KAAK,qGA7Hf,MAAAa,EAAA,CAAAC,MAAM,QACJC,EAAA,CAAAD,MAAM,0BACTE,EAAA3D,EAAA4D,mBAA8C,MAAA,CAAzCH,MAAM,sBAAqB,YAAQ,GACnCI,EAAA,CAAAJ,MAAM,QACTK,EAAA9D,EAAA4D,mBAMM,MANN,CACEH,MAAM,WACN,YAAU,mBACS,qBAAA,YACpB,WAED,GACKM,EAAA,CAAAN,MAAM,0CAOTA,MAAM,aACN,YAAU,sCACV,qBAAmB,YAEnBO,EAAAhE,EAAA4D,mBAAe,OAAA,KAAT,MAAE,aAWPK,EAAA,CAAAR,MAAM,6DAnCjB,OAAAzD,EAAAkE,YAAAlE,EAAAmE,mBA6CM,MA7CN,KAAA,CACEnE,EAAAoE,YAAUC,GACVrE,EAAA4D,mBA0CM,MA1CNJ,EAAA,CACExD,EAAA4D,mBAwCM,MAxCNF,EAAA,CACEC,EACA3D,EAAA4D,mBA6BM,MA7BNC,EAAA,CACEC,EAOA9D,EAAA4D,mBAKM,MALNG,EAAA,EACE/D,EAAAkE,WAAA,GAAAlE,EAAAmE,mBAGQnE,EAAAsE,SAAA,KAAAtE,EAAAuE,WAHcC,EAAA/D,WAAR+B,IAAdxC,EAAAkE,YAAAlE,EAAAmE,mBAGQ,QAHR,CAAkCM,IAAKjC,EAAKpB,KAC1CpB,EAAA4D,mBAAmD,QAAnD,CAAOb,KAAK,WAAY2B,SAAMC,GAAEH,EAAAjC,UAAUC,eAASxC,EAAA4E,gBAAA,IACnD5E,EAAA6E,gBAAGrC,EAAKU,OAD2C,gBAIvDlD,EAAA4D,mBAcM,MAdNkB,EAAA,CAKEd,EACAhE,EAAA+E,eAAA/E,EAAA4D,mBAME,QANF,CACEH,MAAM,YACG,sBAAAuB,EAAA,KAAAA,EAAA,GAAAL,GAAAH,EAAA9C,MAAAiD,GACT5B,KAAK,QACJkC,IAAK,EACLC,IAAKV,EAAA5D,qBAHG,CAAAZ,EAAAmF,WAAAX,EAAA9C,SAIT1B,EAAA4E,gBAAA,IACF5E,EAAA6E,gBAAGL,EAAA9C,OAAQ,MAAG1B,EAAA6E,gBAAGL,EAAA5D,UADf,OAINZ,EAAA4D,mBAOM,MAPNK,EAAA,CACEjE,EAAA4D,mBAKM,MALN,CACGwB,QAAKJ,EAAA,KAAAA,EAAA,GAAA,IAAAK,IAAEb,EAAA5B,OAAA4B,EAAA5B,SAAAyC,IACR5B,MAAM,uEACP,yFArCX6B,EAAeC","sources":["client/views/SuggestedWordSelection.vue"],"sourcesContent":["<template>\n  <div>\n    <Header />\n    <div class=\"px-8\">\n      <div class=\"container mx-auto mt-4\">\n        <div class=\"text-4xl font-bold\">추천 단어 설정</div>\n        <div class=\"mt-2\">\n          <div\n            class=\"text-3xl\"\n            data-hint=\"플레이할 주제를 선택해 주세요\"\n            data-hint-position=\"top-left\"\n          >\n            주제 선택\n          </div>\n          <div class=\"flex gap-8 flex-wrap\">\n            <label v-for=\"item in suggested\" :key=\"item.id\">\n              <input type=\"checkbox\" @change=\"onUpdated(item)\" />\n              {{ item.title }}\n            </label>\n          </div>\n          <div\n            class=\"flex gap-4\"\n            data-hint=\"플레이할 단어의 개수를 선택해주세요(선택한 주제에서 선택됩니다)\"\n            data-hint-position=\"top-left\"\n          >\n            <span>개수</span>\n            <input\n              class=\"flex-grow\"\n              v-model=\"count\"\n              type=\"range\"\n              :min=\"0\"\n              :max=\"maxCount\"\n            />\n            {{ count }} / {{ maxCount }}\n          </div>\n        </div>\n        <div class=\"mt-2\">\n          <div\n            @click=\"start\"\n            class=\"p-2 border-2 text-center rounded-md border-green-400 cursor-pointer\"\n          >\n            시작\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Header from '../components/Header.vue'\nimport { defineComponent } from 'vue'\nimport { Category } from '../types'\nimport { createToast } from 'mosha-vue-toastify'\nimport _ from 'lodash'\nimport { useStore } from 'vuex'\nimport introJs, { IntroJs } from 'intro.js'\n\nexport default defineComponent({\n  name: 'SuggestedWordSelection',\n  components: { Header },\n  setup() {\n    const store = useStore()\n\n    return { suggested: store.state.suggested as Category[], store }\n  },\n  computed: {\n    maxCount() {\n      if (!this.categories.length) return 0\n      const vm = this as unknown as { categories: string[] }\n      return vm.categories\n        .map(\n          (x) =>\n            (\n              (this as any).store.state.suggested.find(\n                (y: Category) => y.id === x\n              ) as Category\n            ).words.length\n        )\n        .reduce((a, b) => a + b)\n    },\n  },\n  data() {\n    return {\n      categories: [] as string[],\n      count: 0,\n      intro: null as IntroJs | null,\n    }\n  },\n  mounted() {\n    const intro = (this.intro = introJs().addHints())\n    for (let i = 0; i < 2; i++) {\n      if (localStorage['tutorial__suggestedSelection.' + i]) {\n        intro.hideHint(i)\n      }\n    }\n    intro.onhintclose((stepId) => {\n      localStorage['tutorial__suggestedSelection.' + stepId] = true\n    })\n  },\n  beforeUnmount() {\n    this.intro?.removeHints()\n  },\n  methods: {\n    onUpdated(item: Category) {\n      if (this.categories.includes(item.id)) {\n        this.categories = this.categories.filter((x) => x !== item.id)\n        return\n      }\n      this.categories.push(item.id)\n    },\n    start() {\n      if (!this.count)\n        return createToast('최소 1개의 단어가 설정되어야 합니다', {\n          type: 'danger',\n        })\n      const words = this.categories\n        .map((x) => {\n          const category = this.store.state.suggested.find(\n            (y: Category) => y.id === x\n          ) as Category\n          return category.words.map((x) => {\n            x.category = category.title\n            return x\n          })\n        })\n        .reduce((a, b) => [...a, ...b])\n      this.store.commit('wordSet', _.sampleSize(words, this.count))\n      this.$router.push('/settings')\n    },\n  },\n})\n</script>\n"],"names":["$8500b84628056e0c$var$script","parcelRequire","__esModule","default","render","__scopeId","__file","$8500b84628056e0c$export$2e2bcd8739ae039","$1bb92c0838a75ad3$export$2e2bcd8739ae039","$ecd4d","defineComponent","name","components","$1Za3e","setup","store","$jgDES","useStore","suggested","state","computed","maxCount","this","categories","length","map","x","find","y","id","words","reduce","a","b","data","count","intro","mounted","$jDATe","addHints","i","localStorage","hideHint","onhintclose","stepId","beforeUnmount","removeHints","methods","onUpdated","item","includes","filter","push","start","$4t2Ub","createToast","type","x1","category","title","commit","$parcel$interopDefault","$f1q41","sampleSize","$router","$60b862184a460095$var$_hoisted_1","class","$60b862184a460095$var$_hoisted_2","$60b862184a460095$var$_hoisted_3","createElementVNode","$60b862184a460095$var$_hoisted_4","$60b862184a460095$var$_hoisted_5","$60b862184a460095$var$_hoisted_6","$60b862184a460095$var$_hoisted_9","$60b862184a460095$var$_hoisted_11","openBlock","createElementBlock","createVNode","_component_Header","Fragment","renderList","_ctx","key","onChange","$event","createTextVNode","toDisplayString","$60b862184a460095$var$_hoisted_8","withDirectives","_cache","min","max","vModelText","onClick","args","$4ed8019416e0e577$export$2e2bcd8739ae039","script"],"version":3,"file":"SuggestedWordSelection.e57c6aa4.js.map"}