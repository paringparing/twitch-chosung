{"mappings":"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","sources":["client/views/Play.vue","node_modules/hangul-js/hangul.js","node_modules/@parcel/runtime-js/lib/runtime-77cf2b4095b821a1.js"],"sourcesContent":["<template>\n  <div class=\"flex flex-col h-screen\">\n    <Header />\n    <div\n      class=\"flex flex-grow flex-col items-center mt-16 relative\"\n      v-if=\"ready\"\n    >\n      <div class=\"chat\" v-if=\"showChat\">\n        <div v-for=\"i in chat\" :class=\"{ correct: i.correct, item: true }\">\n          <span v-if=\"i.percentage !== undefined\">{{ i.percentage }}%</span>\n          &lt;{{ i.state['display-name'] ?? i.state.username }}&gt; &nbsp;\n          {{ i.chat }}\n        </div>\n      </div>\n      <div class=\"text-6xl font-black\">\n        {{ currentTurn + 1 }} / {{ wordSet.length }} 라운드\n      </div>\n      <div\n        class=\"flex mt-8 border-2 border-black\"\n        data-hint=\"글자를 클릭해 해당 글자 보기\"\n        data-hint-position=\"top-left\"\n      >\n        <div\n          class=\"border border-4 border-black w-32 h-32 flex font-bold items-center justify-center text-8xl cursor-pointer\"\n          @click=\"showChar(parseInt(i))\"\n          v-for=\"[i, char] in Object.entries(currentWord.word.split(''))\"\n        >\n          {{\n            isAnswerVisible || shownChars.includes(parseInt(i))\n              ? char\n              : getChosung(char)\n          }}\n        </div>\n      </div>\n      <div class=\"mt-8 text-4xl font-bold text-center\" v-if=\"hintLevel >= 1\">\n        {{\n          currentWord.category\n            ? `주제: ${currentWord.category}`\n            : currentWord.hint\n        }}\n      </div>\n      <div\n        class=\"mt-8 text-4xl font-bold text-center\"\n        v-if=\"currentWord.category && hintLevel >= 2\"\n      >\n        {{ currentWord.hint }}\n      </div>\n      <div\n        v-if=\"currentWord.category ? hintLevel <= 1 : hintLevel <= 0\"\n        @click=\"setShowHint\"\n        class=\"mt-8 text-3xl cursor-pointer\"\n      >\n        클릭해서 힌트 보기\n      </div>\n      <div\n        v-if=\"matchedUser\"\n        class=\"fixed left-0 top-0 w-full h-full flex justify-center items-center bg-black bg-opacity-50\"\n      >\n        <div\n          class=\"p-8 bg-white flex flex-col items-center\"\n          style=\"min-width: 500px\"\n        >\n          <div class=\"text-4xl\">{{ matchedUser.username }} 정답!</div>\n          <div class=\"text-center text-6xl mt-8 font-bold\">\n            {{ currentWord.word }}\n          </div>\n          <div class=\"text-center text-3xl\">{{ currentWord.hint }}</div>\n          <div\n            class=\"border-2 text-center p-4 text-2xl mt-8 w-full cursor-pointer\"\n            @click=\"nextWord\"\n            v-if=\"!popupConnected\"\n          >\n            {{ currentTurn + 1 === wordSet.length ? '결과 보기' : '다음' }}\n          </div>\n        </div>\n      </div>\n      <div class=\"flex-grow\"></div>\n      <div class=\"flex w-full justify-end p-4\" v-if=\"!popupConnected\">\n        <div\n          v-if=\"!isAnswerVisible\"\n          @click=\"showAnswer\"\n          class=\"bg-red-500 text-white py-4 px-6 rounded-lg cursor-pointer hover:brightness-90 transition-all active:brightness-75\"\n        >\n          정답 보기\n        </div>\n        <div\n          v-else\n          @click=\"nextWord\"\n          class=\"bg-green-500 text-white py-4 px-6 rounded-lg cursor-pointer hover:brightness-90 transition-all active:brightness-75\"\n        >\n          {{ currentTurn + 1 === wordSet.length ? '결과 보기' : '다음' }}\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, watch } from 'vue'\nimport { useStore } from 'vuex'\nimport { Word } from '../types'\nimport Header from '../components/Header.vue'\nimport { createToast } from 'mosha-vue-toastify'\nimport { ChatUserstate, Client } from 'tmi.js'\nimport Hangul from 'hangul-js'\nimport { History } from '../store'\nimport { event } from 'vue-gtag'\nimport { getPopupWindow } from '../utils/popup'\nimport introJs, { IntroJs } from 'intro.js'\n\nconst correctSound = new Audio(\n  // @ts-ignore\n  new URL('../assets/sfx/correct.wav', import.meta.url).toString()\n)\n\nexport default defineComponent({\n  components: { Header },\n  setup() {\n    const store = useStore()\n\n    store.state.history = []\n\n    return {\n      wordSet: computed<Word[]>(() => store.state.wordSet as Word[]),\n      tmi: computed<Client>(() => store.state.tmi as Client),\n      history: computed<History>(() => store.state.history),\n      store,\n      showChat: computed(() => store.state.showChat),\n      popupConnected: computed(() => store.state.popupConnected),\n    }\n  },\n  computed: {\n    currentWord() {\n      const vm = this as { wordSet: Word[]; currentTurn: number }\n\n      if (!vm.wordSet) return null\n\n      return vm.wordSet[vm.currentTurn]\n    },\n  },\n  data() {\n    return {\n      currentTurn: 0,\n      ready: false,\n      matchedUser: null as null | { username: string },\n      hintLevel: 0,\n      isAnswerVisible: false,\n      chat: [] as {\n        chat: string\n        state: ChatUserstate\n        correct?: boolean\n        percentage?: number\n      }[],\n      shownChars: [] as number[],\n      intro: null as IntroJs | null,\n    }\n  },\n  mounted() {\n    if (!this.wordSet) {\n      createToast('단어 데이터가 설정되지 않았습니다.', { type: 'danger' })\n      this.$router.push('/')\n      return\n    }\n    this.tmi.on('message', this.onChat)\n    this.ready = true\n    this.$nextTick(() => {\n      const intro = (this.intro = introJs().addHints())\n      for (let i = 0; i < 1; i++) {\n        if (localStorage['tutorial__play.' + i]) {\n          intro.hideHint(i)\n        }\n      }\n      intro.onhintclose((stepId) => {\n        localStorage['tutorial__play.' + stepId] = true\n      })\n    })\n    getPopupWindow()?.dispatchEvent(\n      new CustomEvent('state_changed', {\n        detail: { action: 'set_word', value: this.currentWord },\n      })\n    )\n    event('game_start', { channel: this.tmi.getChannels()[0] })\n  },\n  beforeUnmount() {\n    getPopupWindow()?.dispatchEvent(\n      new CustomEvent('state_changed', { detail: { action: 'end' } })\n    )\n    const w = window as any\n    w.onPopupConnected = null\n    w.onNextWord = null\n    this.tmi.removeListener('message', this.onChat)\n    event('game_end', { channel: this.tmi.getChannels()[0] })\n  },\n  created() {\n    const w = window as any\n    w.onPopupConnected = () => {\n      getPopupWindow()?.dispatchEvent(\n        new CustomEvent('state_changed', {\n          detail: { action: 'set_word', value: this.currentWord },\n        })\n      )\n    }\n    w.onNextWord = () => {\n      if (this.isAnswerVisible || this.matchedUser) {\n        this.nextWord()\n      } else {\n        this.showAnswer()\n      }\n    }\n  },\n  methods: {\n    onChat(channel: string, userState: ChatUserstate, message: string) {\n      const addChat = (fail: boolean = false) => {\n        let percentage: number | undefined\n        if (fail) {\n          if (this.store.state.showPercentageInChat) {\n            if (this.currentWord) {\n              if (this.currentWord.word.length === message.length) {\n                let max = 0\n                let matched = 0\n                for (let i = 0; i < this.currentWord.word.length; i++) {\n                  const char = this.currentWord.word[i]\n                  const disassembled = Hangul.d(char)\n                  max += disassembled.length\n                  const disassembledMessage = Hangul.d(message[i])\n                  matched += disassembled.filter(\n                    (x, i) => disassembledMessage[i] === x\n                  ).length\n                }\n                percentage = Math.floor((matched / max) * 100)\n              }\n            }\n          }\n        }\n        this.chat.push({\n          chat: message,\n          state: userState,\n          percentage,\n        })\n        if (this.chat.length > 10) {\n          this.chat.shift()\n        }\n      }\n      if (this.matchedUser || this.isAnswerVisible) return addChat()\n      const matched = this.currentWord!.word === message\n      if (matched) {\n        const username = (userState['display-name'] ??\n          userState.username) as string\n        this.matchedUser = { username }\n        correctSound.play()\n        this.chat.push({\n          chat: message,\n          state: userState,\n          correct: true,\n        })\n        if (this.chat.length > 10) {\n          this.chat.shift()\n        }\n        this.history.push({\n          user: username,\n          word: this.currentWord!.word,\n        })\n        getPopupWindow()?.dispatchEvent(\n          new CustomEvent('state_changed', {\n            detail: {\n              action: 'set_answer_visible',\n              value: true,\n            },\n          })\n        )\n        return\n      }\n      addChat(true)\n    },\n    getChosung(char: string) {\n      return Hangul.disassemble(char)[0]\n    },\n    nextWord() {\n      if (this.wordSet.length - 1 === this.currentTurn) {\n        this.$router.push('/result')\n        return\n      }\n      this.shownChars = []\n      this.matchedUser = null\n      this.hintLevel = 0\n      this.isAnswerVisible = false\n      this.currentTurn++\n      getPopupWindow()?.dispatchEvent(\n        new CustomEvent('state_changed', {\n          detail: {\n            action: 'set_answer_visible',\n            value: false,\n          },\n        })\n      )\n      getPopupWindow()?.dispatchEvent(\n        new CustomEvent('state_changed', {\n          detail: { action: 'set_word', value: this.currentWord },\n        })\n      )\n    },\n    setShowHint() {\n      this.hintLevel += 1\n    },\n    showAnswer() {\n      this.history.push({\n        user: null,\n        word: this.currentWord!.word,\n      })\n      this.hintLevel = 2\n      this.isAnswerVisible = true\n      getPopupWindow()?.dispatchEvent(\n        new CustomEvent('state_changed', {\n          detail: {\n            action: 'set_answer_visible',\n            value: true,\n          },\n        })\n      )\n    },\n    showChar(index: number) {\n      if (this.shownChars.includes(index)) return\n      this.shownChars.push(index)\n      if (this.shownChars.length === this.currentWord!.word.length) {\n        this.showAnswer()\n      }\n    },\n  },\n})\n</script>\n\n<style scoped lang=\"scss\">\n.chat {\n  position: absolute;\n  pointer-events: none;\n  right: 30px;\n  top: 0;\n\n  width: 300px;\n  align-items: stretch;\n\n  display: flex;\n\n  flex-direction: column;\n\n  .item {\n    display: flex;\n    gap: 10px;\n\n    &.correct {\n      color: #18bb67;\n    }\n  }\n}\n</style>\n","/**\r\n * Hangul.js\r\n * https://github.com/e-/Hangul.js\r\n *\r\n * Copyright 2017, Jaemin Jo\r\n * under the MIT license.\r\n */\r\n\r\n(function () {\r\n    'use strict';\r\n    var CHO = [\r\n        'ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ',\r\n        'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ',\r\n        'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ',\r\n        'ㅍ', 'ㅎ'\r\n    ],\r\n        JUNG = [\r\n            'ㅏ', 'ㅐ', 'ㅑ', 'ㅒ', 'ㅓ',\r\n            'ㅔ', 'ㅕ', 'ㅖ', 'ㅗ', ['ㅗ', 'ㅏ'], ['ㅗ', 'ㅐ'],\r\n            ['ㅗ', 'ㅣ'], 'ㅛ', 'ㅜ', ['ㅜ', 'ㅓ'], ['ㅜ', 'ㅔ'], ['ㅜ', 'ㅣ'],\r\n            'ㅠ', 'ㅡ', ['ㅡ', 'ㅣ'], 'ㅣ'\r\n        ],\r\n        JONG = [\r\n            '', 'ㄱ', 'ㄲ', ['ㄱ', 'ㅅ'], 'ㄴ', ['ㄴ', 'ㅈ'], ['ㄴ', 'ㅎ'], 'ㄷ', 'ㄹ',\r\n            ['ㄹ', 'ㄱ'], ['ㄹ', 'ㅁ'], ['ㄹ', 'ㅂ'], ['ㄹ', 'ㅅ'], ['ㄹ', 'ㅌ'], ['ㄹ', 'ㅍ'], ['ㄹ', 'ㅎ'], 'ㅁ',\r\n            'ㅂ', ['ㅂ', 'ㅅ'], 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'\r\n        ],\r\n        HANGUL_OFFSET = 0xAC00,\r\n        CONSONANTS = [\r\n            'ㄱ', 'ㄲ', 'ㄳ', 'ㄴ', 'ㄵ', 'ㄶ', 'ㄷ', 'ㄸ',\r\n            'ㄹ', 'ㄺ', 'ㄻ', 'ㄼ', 'ㄽ', 'ㄾ', 'ㄿ', 'ㅀ',\r\n            'ㅁ', 'ㅂ', 'ㅃ', 'ㅄ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ',\r\n            'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'\r\n        ],\r\n        COMPLETE_CHO = [\r\n            'ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ',\r\n            'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', 'ㅅ', 'ㅆ',\r\n            'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'\r\n        ],\r\n        COMPLETE_JUNG = [\r\n            'ㅏ', 'ㅐ', 'ㅑ', 'ㅒ', 'ㅓ',\r\n            'ㅔ', 'ㅕ', 'ㅖ', 'ㅗ', 'ㅘ', 'ㅙ',\r\n            'ㅚ', 'ㅛ', 'ㅜ', 'ㅝ', 'ㅞ', 'ㅟ',\r\n            'ㅠ', 'ㅡ', 'ㅢ', 'ㅣ'\r\n        ],\r\n        COMPLETE_JONG = [\r\n            '', 'ㄱ', 'ㄲ', 'ㄳ', 'ㄴ', 'ㄵ', 'ㄶ', 'ㄷ', 'ㄹ',\r\n            'ㄺ', 'ㄻ', 'ㄼ', 'ㄽ', 'ㄾ', 'ㄿ', 'ㅀ', 'ㅁ',\r\n            'ㅂ', 'ㅄ', 'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'\r\n        ],\r\n        COMPLEX_CONSONANTS = [\r\n            ['ㄱ', 'ㅅ', 'ㄳ'],\r\n            ['ㄴ', 'ㅈ', 'ㄵ'],\r\n            ['ㄴ', 'ㅎ', 'ㄶ'],\r\n            ['ㄹ', 'ㄱ', 'ㄺ'],\r\n            ['ㄹ', 'ㅁ', 'ㄻ'],\r\n            ['ㄹ', 'ㅂ', 'ㄼ'],\r\n            ['ㄹ', 'ㅅ', 'ㄽ'],\r\n            ['ㄹ', 'ㅌ', 'ㄾ'],\r\n            ['ㄹ', 'ㅍ', 'ㄿ'],\r\n            ['ㄹ', 'ㅎ', 'ㅀ'],\r\n            ['ㅂ', 'ㅅ', 'ㅄ']\r\n        ],\r\n        COMPLEX_VOWELS = [\r\n            ['ㅗ', 'ㅏ', 'ㅘ'],\r\n            ['ㅗ', 'ㅐ', 'ㅙ'],\r\n            ['ㅗ', 'ㅣ', 'ㅚ'],\r\n            ['ㅜ', 'ㅓ', 'ㅝ'],\r\n            ['ㅜ', 'ㅔ', 'ㅞ'],\r\n            ['ㅜ', 'ㅣ', 'ㅟ'],\r\n            ['ㅡ', 'ㅣ', 'ㅢ']\r\n        ],\r\n        CONSONANTS_HASH,\r\n        CHO_HASH,\r\n        JUNG_HASH,\r\n        JONG_HASH,\r\n        COMPLEX_CONSONANTS_HASH,\r\n        COMPLEX_VOWELS_HASH\r\n        ;\r\n\r\n    function _makeHash(array) {\r\n        var length = array.length,\r\n            hash = { 0: 0 }\r\n            ;\r\n        for (var i = 0; i < length; i++) {\r\n            if (array[i])\r\n                hash[array[i].charCodeAt(0)] = i;\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    CONSONANTS_HASH = _makeHash(CONSONANTS);\r\n    CHO_HASH = _makeHash(COMPLETE_CHO);\r\n    JUNG_HASH = _makeHash(COMPLETE_JUNG);\r\n    JONG_HASH = _makeHash(COMPLETE_JONG);\r\n\r\n    function _makeComplexHash(array) {\r\n        var length = array.length,\r\n            hash = {},\r\n            code1,\r\n            code2\r\n            ;\r\n        for (var i = 0; i < length; i++) {\r\n            code1 = array[i][0].charCodeAt(0);\r\n            code2 = array[i][1].charCodeAt(0);\r\n            if (typeof hash[code1] === 'undefined') {\r\n                hash[code1] = {};\r\n            }\r\n            hash[code1][code2] = array[i][2].charCodeAt(0);\r\n        }\r\n        return hash;\r\n    }\r\n\r\n    COMPLEX_CONSONANTS_HASH = _makeComplexHash(COMPLEX_CONSONANTS);\r\n    COMPLEX_VOWELS_HASH = _makeComplexHash(COMPLEX_VOWELS);\r\n\r\n    function _isConsonant(c) {\r\n        return typeof CONSONANTS_HASH[c] !== 'undefined';\r\n    }\r\n\r\n    function _isCho(c) {\r\n        return typeof CHO_HASH[c] !== 'undefined';\r\n    }\r\n\r\n    function _isJung(c) {\r\n        return typeof JUNG_HASH[c] !== 'undefined';\r\n    }\r\n\r\n    function _isJong(c) {\r\n        return typeof JONG_HASH[c] !== 'undefined';\r\n    }\r\n\r\n    function _isHangul(c /* code number */) {\r\n        return 0xAC00 <= c && c <= 0xd7a3;\r\n    }\r\n\r\n    function _isJungJoinable(a, b) {\r\n        return (COMPLEX_VOWELS_HASH[a] && COMPLEX_VOWELS_HASH[a][b]) ? COMPLEX_VOWELS_HASH[a][b] : false;\r\n    }\r\n\r\n    function _isJongJoinable(a, b) {\r\n        return COMPLEX_CONSONANTS_HASH[a] && COMPLEX_CONSONANTS_HASH[a][b] ? COMPLEX_CONSONANTS_HASH[a][b] : false;\r\n    }\r\n\r\n    var disassemble = function (string, grouped) {\r\n        if (string === null) {\r\n            throw new Error('Arguments cannot be null');\r\n        }\r\n\r\n        if (typeof string === 'object') {\r\n            string = string.join('');\r\n        }\r\n\r\n        var result = [],\r\n            length = string.length,\r\n            cho,\r\n            jung,\r\n            jong,\r\n            code,\r\n            r\r\n            ;\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            var temp = [];\r\n\r\n            code = string.charCodeAt(i);\r\n            if (_isHangul(code)) { // 완성된 한글이면\r\n                code -= HANGUL_OFFSET;\r\n                jong = code % 28;\r\n                jung = (code - jong) / 28 % 21;\r\n                cho = parseInt((code - jong) / 28 / 21);\r\n                temp.push(CHO[cho]);\r\n                if (typeof JUNG[jung] === 'object') {\r\n                    temp = temp.concat(JUNG[jung]);\r\n                } else {\r\n                    temp.push(JUNG[jung]);\r\n                }\r\n                if (jong > 0) {\r\n                    if (typeof JONG[jong] === 'object') {\r\n                        temp = temp.concat(JONG[jong]);\r\n                    } else {\r\n                        temp.push(JONG[jong]);\r\n                    }\r\n                }\r\n            } else if (_isConsonant(code)) { //자음이면\r\n                if (_isCho(code)) {\r\n                    r = CHO[CHO_HASH[code]];\r\n                } else {\r\n                    r = JONG[JONG_HASH[code]];\r\n                }\r\n                if (typeof r === 'string') {\r\n                    temp.push(r);\r\n                } else {\r\n                    temp = temp.concat(r);\r\n                }\r\n            } else if (_isJung(code)) {\r\n                r = JUNG[JUNG_HASH[code]];\r\n                if (typeof r === 'string') {\r\n                    temp.push(r);\r\n                } else {\r\n                    temp = temp.concat(r);\r\n                }\r\n            } else {\r\n                temp.push(string.charAt(i));\r\n            }\r\n\r\n            if (grouped) result.push(temp);\r\n            else result = result.concat(temp);\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    var disassembleToString = function (str) {\r\n        if (typeof str !== 'string') {\r\n            return '';\r\n        }\r\n        str = disassemble(str);\r\n        return str.join('');\r\n    };\r\n\r\n    var assemble = function (array) {\r\n        if (typeof array === 'string') {\r\n            array = disassemble(array);\r\n        }\r\n\r\n        var result = [],\r\n            length = array.length,\r\n            code,\r\n            stage = 0,\r\n            complete_index = -1, //완성된 곳의 인덱스\r\n            previous_code,\r\n            jong_joined = false\r\n            ;\r\n\r\n        function _makeHangul(index) { // complete_index + 1부터 index까지를 greedy하게 한글로 만든다.\r\n            var code,\r\n                cho,\r\n                jung1,\r\n                jung2,\r\n                jong1 = 0,\r\n                jong2,\r\n                hangul = ''\r\n                ;\r\n\r\n            jong_joined = false;\r\n            if (complete_index + 1 > index) {\r\n                return;\r\n            }\r\n            for (var step = 1; ; step++) {\r\n                if (step === 1) {\r\n                    cho = array[complete_index + step].charCodeAt(0);\r\n                    if (_isJung(cho)) { // 첫번째 것이 모음이면 1) ㅏ같은 경우이거나 2) ㅙ같은 경우이다\r\n                        if (complete_index + step + 1 <= index && _isJung(jung1 = array[complete_index + step + 1].charCodeAt(0))) { //다음것이 있고 모음이면\r\n                            result.push(String.fromCharCode(_isJungJoinable(cho, jung1)));\r\n                            complete_index = index;\r\n                            return;\r\n                        } else {\r\n                            result.push(array[complete_index + step]);\r\n                            complete_index = index;\r\n                            return;\r\n                        }\r\n                    } else if (!_isCho(cho)) {\r\n                        result.push(array[complete_index + step]);\r\n                        complete_index = index;\r\n                        return;\r\n                    }\r\n                    hangul = array[complete_index + step];\r\n                } else if (step === 2) {\r\n                    jung1 = array[complete_index + step].charCodeAt(0);\r\n                    if (_isCho(jung1)) { //두번째 또 자음이 오면 ㄳ 에서 ㅅ같은 경우이다\r\n                        cho = _isJongJoinable(cho, jung1);\r\n                        hangul = String.fromCharCode(cho);\r\n                        result.push(hangul);\r\n                        complete_index = index;\r\n                        return;\r\n                    } else {\r\n                        hangul = String.fromCharCode((CHO_HASH[cho] * 21 + JUNG_HASH[jung1]) * 28 + HANGUL_OFFSET);\r\n                    }\r\n                } else if (step === 3) {\r\n                    jung2 = array[complete_index + step].charCodeAt(0);\r\n                    if (_isJungJoinable(jung1, jung2)) {\r\n                        jung1 = _isJungJoinable(jung1, jung2);\r\n                    } else {\r\n                        jong1 = jung2;\r\n                    }\r\n                    hangul = String.fromCharCode((CHO_HASH[cho] * 21 + JUNG_HASH[jung1]) * 28 + JONG_HASH[jong1] + HANGUL_OFFSET);\r\n                    \r\n                } else if (step === 4) {\r\n                    jong2 = array[complete_index + step].charCodeAt(0);\r\n                    if (_isJongJoinable(jong1, jong2)) {\r\n                        jong1 = _isJongJoinable(jong1, jong2);\r\n                    } else {\r\n                        jong1 = jong2;\r\n                    }\r\n                    hangul = String.fromCharCode((CHO_HASH[cho] * 21 + JUNG_HASH[jung1]) * 28 + JONG_HASH[jong1] + HANGUL_OFFSET);\r\n                } else if (step === 5) {\r\n                    jong2 = array[complete_index + step].charCodeAt(0);\r\n                    jong1 = _isJongJoinable(jong1, jong2);\r\n                    hangul = String.fromCharCode((CHO_HASH[cho] * 21 + JUNG_HASH[jung1]) * 28 + JONG_HASH[jong1] + HANGUL_OFFSET);\r\n                }\r\n\r\n                if (complete_index + step >= index) {\r\n                    result.push(hangul);\r\n                    complete_index = index;\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            code = array[i].charCodeAt(0);\r\n            if (!_isCho(code) && !_isJung(code) && !_isJong(code)) { //초, 중, 종성 다 아니면\r\n                _makeHangul(i - 1);\r\n                _makeHangul(i);\r\n                stage = 0;\r\n                continue;\r\n            }\r\n            //console.log(stage, array[i]);\r\n            if (stage === 0) { // 초성이 올 차례\r\n                if (_isCho(code)) { // 초성이 오면 아무 문제 없다.\r\n                    stage = 1;\r\n                } else if (_isJung(code)) {\r\n                    // 중성이오면 ㅐ 또는 ㅘ 인것이다. 바로 구분을 못한다. 따라서 특수한 stage인 stage4로 이동\r\n                    stage = 4;\r\n                }\r\n            } else if (stage == 1) { //중성이 올 차례\r\n                if (_isJung(code)) { //중성이 오면 문제없음 진행.\r\n                    stage = 2;\r\n                } else { //아니고 자음이오면 ㄻ같은 경우가 있고 ㄹㅋ같은 경우가 있다.\r\n                    if (_isJongJoinable(previous_code, code)) {\r\n                        // 합쳐질 수 있다면 ㄻ 같은 경우인데 이 뒤에 모음이 와서 ㄹ마 가 될수도 있고 초성이 올 수도 있다. 따라서 섣불리 완성할 수 없다. 이땐 stage5로 간다.\r\n                        stage = 5;\r\n                    } else { //합쳐질 수 없다면 앞 글자 완성 후 여전히 중성이 올 차례\r\n                        _makeHangul(i - 1);\r\n                    }\r\n                }\r\n            } else if (stage == 2) { //종성이 올 차례\r\n                if (_isJong(code)) { //종성이 오면 다음엔 자음 또는 모음이 온다.\r\n                    stage = 3;\r\n                } else if (_isJung(code)) { //그런데 중성이 오면 앞의 모음과 합칠 수 있는지 본다.\r\n                    if (_isJungJoinable(previous_code, code)) { //합칠 수 있으면 여전히 종성이 올 차례고 그대로 진행\r\n                    } else { // 합칠 수 없다면 오타가 생긴 경우\r\n                        _makeHangul(i - 1);\r\n                        stage = 4;\r\n                    }\r\n                } else { // 받침이 안되는 자음이 오면 ㄸ 같은 이전까지 완성하고 다시시작\r\n                    _makeHangul(i - 1);\r\n                    stage = 1;\r\n                }\r\n            } else if (stage == 3) { // 종성이 하나 온 상태.\r\n                if (_isJong(code)) { // 또 종성이면 합칠수 있는지 본다.\r\n                    if (!jong_joined && _isJongJoinable(previous_code, code)) { //합칠 수 있으면 계속 진행. 왜냐하면 이번에 온 자음이 다음 글자의 초성이 될 수도 있기 때문. 대신 이 기회는 한번만\r\n                        jong_joined = true;\r\n                    } else { //없으면 한글자 완성\r\n                        _makeHangul(i - 1);\r\n                        stage = 1; // 이 종성이 초성이 되고 중성부터 시작\r\n                    }\r\n                } else if (_isCho(code)) { // 초성이면 한글자 완성.\r\n                    _makeHangul(i - 1);\r\n                    stage = 1; //이 글자가 초성이되므로 중성부터 시작\r\n                } else if (_isJung(code)) { // 중성이면 이전 종성은 이 중성과 합쳐지고 앞 글자는 받침이 없다.\r\n                    _makeHangul(i - 2);\r\n                    stage = 2;\r\n                }\r\n            } else if (stage == 4) { // 중성이 하나 온 상태\r\n                if (_isJung(code)) { //중성이 온 경우\r\n                    if (_isJungJoinable(previous_code, code)) { //이전 중성과 합쳐질 수 있는 경우\r\n                        _makeHangul(i);\r\n                        stage = 0;\r\n                    } else { //중성이 왔지만 못합치는 경우. ㅒㅗ 같은\r\n                        _makeHangul(i - 1);\r\n                    }\r\n                } else { // 아니면 자음이 온 경우.\r\n                    _makeHangul(i - 1);\r\n                    stage = 1;\r\n                }\r\n            } else if (stage == 5) { // 초성이 연속해서 두개 온 상태 ㄺ\r\n                if (_isJung(code)) { //이번에 중성이면 ㄹ가\r\n                    _makeHangul(i - 2);\r\n                    stage = 2;\r\n                } else {\r\n                    _makeHangul(i - 1);\r\n                    stage = 1;\r\n                }\r\n            }\r\n            previous_code = code;\r\n        }\r\n        _makeHangul(i - 1);\r\n        return result.join('');\r\n    };\r\n\r\n    var search = function (a, b) {\r\n        var ad = disassemble(a).join(''),\r\n            bd = disassemble(b).join('')\r\n            ;\r\n\r\n        return ad.indexOf(bd);\r\n    };\r\n\r\n    var rangeSearch = function (haystack, needle) {\r\n        var hex = disassemble(haystack).join(''),\r\n            nex = disassemble(needle).join(''),\r\n            grouped = disassemble(haystack, true),\r\n            re = new RegExp(nex, 'gi'),\r\n            indices = [],\r\n            result;\r\n\r\n        if (!needle.length) return [];\r\n\r\n        while ((result = re.exec(hex))) {\r\n            indices.push(result.index);\r\n        }\r\n\r\n        function findStart(index) {\r\n            for (var i = 0, length = 0; i < grouped.length; ++i) {\r\n                length += grouped[i].length;\r\n                if (index < length) return i;\r\n            }\r\n        }\r\n\r\n        function findEnd(index) {\r\n            for (var i = 0, length = 0; i < grouped.length; ++i) {\r\n                length += grouped[i].length;\r\n                if (index + nex.length <= length) return i;\r\n            }\r\n        }\r\n\r\n        return indices.map(function (i) {\r\n            return [findStart(i), findEnd(i)];\r\n        });\r\n    };\r\n\r\n    function Searcher(string) {\r\n        this.string = string;\r\n        this.disassembled = disassemble(string).join('');\r\n    }\r\n\r\n    Searcher.prototype.search = function (string) {\r\n        return disassemble(string).join('').indexOf(this.disassembled);\r\n    };\r\n    var endsWithConsonant = function (string) {\r\n        if (typeof string === 'object') {\r\n            string = string.join('');\r\n        }\r\n\r\n        var code = string.charCodeAt(string.length - 1);\r\n\r\n        if (_isHangul(code)) { // 완성된 한글이면\r\n            code -= HANGUL_OFFSET;\r\n            var jong = code % 28;\r\n            if (jong > 0) {\r\n                return true;\r\n            }\r\n        } else if (_isConsonant(code)) { //자음이면\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var endsWith = function (string, target) {\r\n        return disassemble(string).pop() === target;\r\n    };\r\n\r\n\r\n    var hangul = {\r\n        disassemble: disassemble,\r\n        d: disassemble, // alias for disassemble\r\n        disassembleToString: disassembleToString,\r\n        ds: disassembleToString, // alias for disassembleToString\r\n        assemble: assemble,\r\n        a: assemble, // alias for assemble\r\n        search: search,\r\n        rangeSearch: rangeSearch,\r\n        Searcher: Searcher,\r\n        endsWithConsonant: endsWithConsonant,\r\n        endsWith: endsWith,\r\n        isHangul: function (c) {\r\n            if (typeof c === 'string')\r\n                c = c.charCodeAt(0);\r\n            return _isHangul(c);\r\n        },\r\n        isComplete: function (c) {\r\n            if (typeof c === 'string')\r\n                c = c.charCodeAt(0);\r\n            return _isHangul(c);\r\n        },\r\n        isConsonant: function (c) {\r\n            if (typeof c === 'string')\r\n                c = c.charCodeAt(0);\r\n            return _isConsonant(c);\r\n        },\r\n        isVowel: function (c) {\r\n            if (typeof c === 'string')\r\n                c = c.charCodeAt(0);\r\n            return _isJung(c);\r\n        },\r\n        isCho: function (c) {\r\n            if (typeof c === 'string')\r\n                c = c.charCodeAt(0);\r\n            return _isCho(c);\r\n        },\r\n        isJong: function (c) {\r\n            if (typeof c === 'string')\r\n                c = c.charCodeAt(0);\r\n            return _isJong(c);\r\n        },\r\n        isHangulAll: function (str) {\r\n            if (typeof str !== 'string') return false;\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (!_isHangul(str.charCodeAt(i))) return false;\r\n            }\r\n            return true;\r\n        },\r\n        isCompleteAll: function (str) {\r\n            if (typeof str !== 'string') return false;\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (!_isHangul(str.charCodeAt(i))) return false;\r\n            }\r\n            return true;\r\n        },\r\n        isConsonantAll: function (str) {\r\n            if (typeof str !== 'string') return false;\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (!_isConsonant(str.charCodeAt(i))) return false;\r\n            }\r\n            return true;\r\n        },\r\n        isVowelAll: function (str) {\r\n            if (typeof str !== 'string') return false;\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (!_isJung(str.charCodeAt(i))) return false;\r\n            }\r\n            return true;\r\n        },\r\n        isChoAll: function (str) {\r\n            if (typeof str !== 'string') return false;\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (!_isCho(str.charCodeAt(i))) return false;\r\n            }\r\n            return true;\r\n        },\r\n        isJongAll: function (str) {\r\n            if (typeof str !== 'string') return false;\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (!_isJong(str.charCodeAt(i))) return false;\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n\r\n    if (typeof define == 'function' && define.amd) {\r\n        define(function () {\r\n            return hangul;\r\n        });\r\n    } else if (typeof module !== 'undefined') {\r\n        module.exports = hangul;\r\n    } else {\r\n        window.Hangul = hangul;\r\n    }\r\n})();\r\n\r\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"34zlx\")).toString();"],"names":["$c9be8de48650ba6e$var$script","parcelRequire","__esModule","default","render","__cssModules","__scopeId","__file","$c9be8de48650ba6e$export$2e2bcd8739ae039","$044ca14788a82734$var$correctSound","Audio","toString","$044ca14788a82734$export$2e2bcd8739ae039","$ecd4d","defineComponent","components","$1Za3e","setup","store","$jgDES","useStore","state","history","wordSet","computed","tmi","showChat","popupConnected","currentWord","vm","this","currentTurn","data","ready","matchedUser","hintLevel","isAnswerVisible","chat","shownChars","intro","mounted","$4t2Ub","createToast","type","$router","push","on","onChat","$nextTick","$jDATe","addHints","i","localStorage","hideHint","onhintclose","stepId","$7TFX2","getPopupWindow","dispatchEvent","CustomEvent","detail","action","value","$cM403","event","channel","getChannels","beforeUnmount","w","window","onPopupConnected","onNextWord","removeListener","created","nextWord","showAnswer","methods","userState","message","addChat","fail","percentage","showPercentageInChat","word","length","max","matched","char","disassembled","$parcel$interopDefault","$5y14U","d","disassembledMessage","filter","x","Math","floor","shift","username","play","correct","user","getChosung","disassemble","setShowHint","showChar","index","includes","CHO_HASH","JUNG_HASH","JONG_HASH","COMPLEX_CONSONANTS_HASH","COMPLEX_VOWELS_HASH","CHO","_makeHash","array","hash","charCodeAt","_makeComplexHash","code2","code1","_isConsonant","c","CONSONANTS_HASH","_isCho","_isJung","_isJong","_isHangul","_isJungJoinable","a","b","_isJongJoinable","string","grouped","Error","join","cho","jung","jong","code","r","temp","HANGUL_OFFSET","JUNG","concat","JONG","charAt","result","disassembleToString","str","previous_code","stage","complete_index","jong_joined","jung1","jung2","jong2","jong1","hangul","step","String","fromCharCode","_makeHangul","Searcher","prototype","search","indexOf","hangul1","ds","assemble","bd","haystack","needle","nex","re","RegExp","indices","exec","hex","findStart","findEnd","map","endsWithConsonant","target","pop","isHangulAll","isCompleteAll","isConsonantAll","isVowelAll","isChoAll","isJongAll","module","exports","URL","resolve","import","meta","url","$7b4745cbc29b6c41$var$_hoisted_1","class","$7b4745cbc29b6c41$var$_hoisted_5","style","$7b4745cbc29b6c41$var$_hoisted_12","$7b4745cbc29b6c41$var$_hoisted_13","$7b4745cbc29b6c41$var$_hoisted_14","$7b4745cbc29b6c41$var$_hoisted_15","$7b4745cbc29b6c41$var$_withScopeId","createElementVNode","openBlock","createElementBlock","createVNode","_component_Header","_ctx","$7b4745cbc29b6c41$var$_hoisted_2","$7b4745cbc29b6c41$var$_hoisted_3","Fragment","renderList","normalizeClass","item","undefined","$7b4745cbc29b6c41$var$_hoisted_4","toDisplayString","createTextVNode","$7b4745cbc29b6c41$var$_hoisted_6","Object","entries","split","onClick","$event","parseInt","$7b4745cbc29b6c41$var$_hoisted_7","$7b4745cbc29b6c41$var$_hoisted_8","category","hint","$7b4745cbc29b6c41$var$_hoisted_9","_cache","args","createCommentVNode","$7b4745cbc29b6c41$var$_hoisted_10","$7b4745cbc29b6c41$var$_hoisted_11","$7b4745cbc29b6c41$var$_hoisted_16","$69e17066b37f2a00$export$2e2bcd8739ae039","script"],"version":3,"file":"Play.91f3d14c.js.map"}